#!/bin/bash

# use case: hhsearch.sh -query_hmm <QUERY_HMM> [OPTIONS]
# please make sure you are at project root (i.e. ProtAgent)

# Default parameter values
query_hmm="examples/fasta/binary/hhmake_output.hmm"
evalue=1e-3

a3m_file="outputs/binary/hhsearch_output.a3m"
UNICLUST="dataset/Umol/uniclust30_2018_08/uniclust30_2018_08"
HHSEARCH="bin/Umol/hh-suite/build/bin/hhsearch"

# Parse arguments
for arg in "$@"
do
    case $arg in
        query_hmm=*) query_hmm="${arg#*=}" ;;
        evalue=*) evalue="${arg#*=}" ;;
        a3m_file=*) a3m_file="${arg#*=}" ;;
        HHSEARCH=*) HHSEARCH="${arg#*=}" ;;
        *) ;;
    esac
done

# Check if required parameters are provided
if [ -z "$query_hmm" ]; then
    echo "Usage: hhsearch.sh -query_hmm <QUERY_HMM> [OPTIONS]"
    echo "Required parameters:"
    echo "  -query_hmm: The query HMM file (generated by HHmake or HHblits)."
    exit 1
fi

# Log the execution
echo "Running hhsearch to search query HMM against a database with results saved to $a3m_file"

# Check directory
current_path=$(pwd)
echo "current_path=$current_path"
if [ $(basename "$current_path") != "ProtAgent" ]; then
    echo "Please make sure you are at project root (i.e. ProtAgent)"
    exit 1
fi


# Run hhsearch
$HHSEARCH -i "$query_hmm" -oa3m "$a3m_file" -e $evalue -d $UNICLUST -cpu 10

if [ $? -eq 0 ]; then
    echo "hhsearch successfully completed. Output saved to $a3m_file."
else
    echo "hhsearch encountered an error. Please check your inputs and options."
    exit 1
fi
